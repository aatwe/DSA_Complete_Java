given  str = "ab"


Print all subsets containing ASCII value of character

Q0) How many function calls?
3 recursive function calls
//include char, exclude char, include char ASCII


Q1) What recursion tree

		null/ ab

	/	   |		\
 
   a/b	 97/b		null/b	

		
Q2) how to get ASCII value of chat?
System.out.println(ch + 0);


Code


 import java.util.Arrays;
    class main {
        public static void main(String[] args) {
            subseqAscii("", "abc");
        }
        static void subseqAscii(String p, String up) {

            if(up.isEmpty()) {
                System.out.println(p);
                return;
            }
            char ch = up.charAt(0);

            subseqAscii(p+ch, up.substring(1));
            subseqAscii(p, up.substring(1));
            subseqAscii(p+(ch + 0), up.substring(1));

        }
    }

++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Q) How to return in a string

Code:



 import java.util.Arrays;
 import java.util.ArrayList;
 class main {
     public static void main(String[] args) {
         System.out.println(subseqAsciiRet("", "abc"));
     }
     static ArrayList<String> subseqAsciiRet(String p, String up) {

         if(up.isEmpty()) {
             ArrayList<String> list = new ArrayList<>();
             list.add(p);
             return list;
         }
         char ch = up.charAt(0);
         ArrayList<String> first  =   subseqAsciiRet(p+ch, up.substring(1));
         ArrayList<String> second =   subseqAsciiRet(p, up.substring(1));
         ArrayList<String> third =    subseqAsciiRet(p + (ch+0), up.substring(1));
         first.addAll(second);
         first.addAll(third);
         return first;

     }
 }

//can add some edge cases if want to ignore the empty ones
[abc, ab, ab99, ac, a, a99, a98c, a98, a9899, bc, b, b99, c, , 99, 98c, 98, 9899, 97bc, 97b, 97b99, 97c, 97, 9799, 9798c, 9798, 979899]
